Пример 2. Использование CefBrowserHost :: CloseBrowser (false) и реализация обратного вызова DoClose (). 

Это рекомендуется для клиентов, использующих нестандартную обработку закрытия или окна, которые 
не были созданы в потоке пользовательского интерфейса процесса браузера. 

1. Пользователь нажимает кнопку закрытия окна, которая отправляет уведомление о закрытии в окно верхнего уровня приложения. 
2. Окно верхнего уровня приложения получает уведомление о закрытии и: 
  A. Вызывает CefBrowserHost :: CloseBrowser (false). 
  Б. Отменяет закрытие окна. 

3. Обработчик JavaScript «onbeforeunload» выполняется и отображает диалоговое окно подтверждения закрытия 
(которое может быть переопределено с помощью CefJSDialogHandler :: OnBeforeUnloadDialog ()). 
4. Пользователь утверждает закрытие. 
5. Обработчик JavaScript «onunload» выполняется. 
6. Вызывается обработчик приложения DoClose(). 

Приложение должно: 
A. Установить флаг, чтобы указать, что следующая попытка закрытия будет разрешена. 
Б. Вернуть ложь. 

7. CEF отправляет уведомление о закрытии в окно верхнего уровня приложения. 
8. Окно верхнего уровня приложения получает уведомление о закрытии и позволяет закрывать окно в соответствии с флагом из # 6B. 
9. Окно верхнего уровня приложения уничтожено. 
10. Вызывается обработчик приложения OnBeforeClose () и объект браузера уничтожается. 
11. Приложение закрывается, вызывая CefQuitMessageLoop (), если других браузеров не существует.
