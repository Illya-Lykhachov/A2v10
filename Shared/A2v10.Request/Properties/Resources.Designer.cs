//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace A2v10.Request.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("A2v10.Request.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;page absolute page-grid&quot; id=&quot;$(PageGuid)&quot;&gt;
        ///    &lt;a2-document-title page-title=&quot;О программе...&quot;&gt;&lt;/a2-document-title&gt;
        ///    &lt;div class=&quot;toolbar page-toolbar&quot;&gt;
        ///        &lt;button class=&quot;btn btn-tb&quot; @click.prevent=&quot;$requery&quot;&gt;&lt;i class=&quot;ico ico-reload&quot;&gt;&lt;/i&gt; Обновить&lt;/button&gt;
        ///        &lt;div class=&quot;aligner&quot;&gt;&lt;/div&gt;
        ///        &lt;button class=&quot;btn btn-tb&quot; @click.prevent=&quot;$close&quot;&gt;&lt;i class=&quot;ico ico-close&quot;&gt;&lt;/i&gt; Закрыть&lt;/button&gt;
        ///    &lt;/div&gt;
        ///    &lt;div class=&quot;page-content&quot;&gt;
        ///        &lt;div class=&quot;grid&quot;&gt;
        ///            &lt;h3  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string about {
            get {
                return ResourceManager.GetString("about", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright © 2015-2018 Alex Kukhtin. All rights reserved.
        ///
        ///(function () {
        ///
        ///    &apos;use strict&apos;;
        ///
        ///    const eventBus = require(&apos;std:eventBus&apos;);
        ///
        ///    const store = component(&apos;std:store&apos;);
        ///    const documentTitle = component(&quot;std:doctitle&quot;);
        ///
        ///
        ///    const vm = new Vue({
        ///        el: &quot;#$(PageGuid)&quot;,
        ///        store: store,
        ///        data: {
        ///        },
        ///        components: {
        ///            &apos;a2-document-title&apos;: documentTitle
        ///        },
        ///        computed: {
        ///        },
        ///        methods: {
        ///            $clos [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string aboutScript {
            get {
                return ResourceManager.GetString("aboutScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;meta name=&quot;description&quot; content=&quot;A2:Web&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;
        ///    &lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot; /&gt;
        ///    &lt;meta name=&quot;rootUrl&quot; content=&quot;$(RootUrl)&quot; /&gt;
        ///    &lt;title&gt;&lt;/title&gt;
        ///    &lt;link href=&quot;/css/site.min.css?v=$(Build)&quot; rel=&quot;stylesheet&quot; /&gt;
        ///    &lt;link rel=&quot;shortcut icon&quot; href=&quot;/favicon.ico&quot; type=&quot;image/x [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string layout {
            get {
                return ResourceManager.GetString("layout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;meta name=&quot;description&quot; content=&quot;A2:Web&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;
        ///    &lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot; /&gt;
        ///    &lt;meta name=&quot;rootUrl&quot; content=&quot;$(RootUrl)&quot; /&gt;
        ///    &lt;title&gt;&lt;/title&gt;
        ///    &lt;link href=&quot;/css/site.min.css?v=$(Build)&quot; rel=&quot;stylesheet&quot; /&gt;
        ///    &lt;link rel=&quot;shortcut icon&quot; href=&quot;/favicon.ico&quot; type=&quot;image/x [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string layoutAdmin {
            get {
                return ResourceManager.GetString("layoutAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;
        ///    &lt;title&gt;A2:Web&lt;/title&gt;
        ///    &lt;link href=&quot;/css/site.min.css?v=$(Build)&quot; rel=&quot;stylesheet&quot; /&gt;
        ///    &lt;link rel=&quot;shortcut icon&quot; href=&quot;/favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt;
        ///    &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    &lt;div id=&quot;app&quot; class=&quot;shell&quot; v-cloak&gt;
        ///        &lt;header clas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string login {
            get {
                return ResourceManager.GetString("login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright © 2015-2017 Alex Kukhtin. All rights reserved.
        ///
        ///(function () {
        ///
        ///
        ///    Vue.directive(&apos;focus&apos;, {
        ///        bind(el, binding, vnode) {
        ///
        ///            el.addEventListener(&quot;focus&quot;, function (event) {
        ///                event.target.parentElement.classList.add(&apos;focus&apos;);
        ///            }, false);
        ///
        ///            el.addEventListener(&quot;blur&quot;, function (event) {
        ///                let t = event.target;
        ///                t._selectDone = false;
        ///                event.target.parentElement.classList.remove(&apos;focus&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string loginScript {
            get {
                return ResourceManager.GetString("loginScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;
        ///    &lt;title&gt;A2:Web&lt;/title&gt;
        ///    &lt;link href=&quot;/css/site.min.css?v=$(Build)&quot; rel=&quot;stylesheet&quot; /&gt;
        ///    &lt;link rel=&quot;shortcut icon&quot; href=&quot;/favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt;
        ///    &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    &lt;div id=&quot;app&quot; class=&quot;shell&quot; v-cloak&gt;
        ///        &lt;header clas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string registerTenant {
            get {
                return ResourceManager.GetString("registerTenant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright © 2015-2017 Alex Kukhtin. All rights reserved.
        ///
        ///(function () {
        ///
        ///
        ///    Vue.directive(&apos;focus&apos;, {
        ///        bind(el, binding, vnode) {
        ///
        ///            el.addEventListener(&quot;focus&quot;, function (event) {
        ///                event.target.parentElement.classList.add(&apos;focus&apos;);
        ///            }, false);
        ///
        ///            el.addEventListener(&quot;blur&quot;, function (event) {
        ///                let t = event.target;
        ///                t._selectDone = false;
        ///                event.target.parentElement.classList.remove(&apos;focus&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string registerTenantScript {
            get {
                return ResourceManager.GetString("registerTenantScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*20171010-7043*/
        ///
        ///(function () {
        ///
        ///    const Shell = component(&apos;std:shellController&apos;);
        ///
        ///	const menu = $(Menu);
        ///
        ///    const shell = new Shell({
        ///        el: &apos;#shell&apos;,
        ///        data: {
        ///            version: &apos;$(AppVersion)&apos;,
        ///			menu: menu.Menu ? menu.Menu[0].Menu : null,
        ///			title: menu.SysParams.AppTitle,
        ///            subtitle: menu.SysParams.AppSubTitle,
        ///            userIsAdmin: $(Admin)
        ///        }
        ///    });
        ///
        ///	window.$rootUrl = &apos;&apos;;
        ///
        ///})();.
        /// </summary>
        internal static string shell {
            get {
                return ResourceManager.GetString("shell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*20171010-7043*/
        ///
        ///(function () {
        ///
        ///    const Shell = component(&apos;std:shellController&apos;);
        ///
        ///	const menu = $(Menu);
        ///
        ///    const shell = new Shell({
        ///        el: &apos;#shell&apos;,
        ///        data: {
        ///			title: menu.SysParams.AppTitle,
        ///			subtitle: &apos;администратор&apos;,
        ///            version: &apos;$(AppVersion)&apos;,
        ///			menu: menu.Menu[0].Menu
        ///        }
        ///    });
        ///
        ///	window.$rootUrl = &apos;&apos;;
        ///
        ///})();.
        /// </summary>
        internal static string shellAdmin {
            get {
                return ResourceManager.GetString("shellAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;ru&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;
        ///    &lt;title&gt;$(Title)&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            background-color: #e3e3e3;
        ///        }
        ///    &lt;/style&gt;
        ///&lt;/head&gt;
        ///&lt;body scroll=&quot;none&quot;&gt;
        ///    $(Viewer)
        ///&lt;/body&gt;
        ///&lt;/html&gt;
        ///.
        /// </summary>
        internal static string stiReportViewer {
            get {
                return ResourceManager.GetString("stiReportViewer", resourceCulture);
            }
        }
    }
}
